{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/navaneeth/OneDrive - BIRLA INSTITUTE OF TECHNOLOGY and SCIENCE/Learning/Full Stack Open 2020/Submissions/part1/unicafe/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = props => {\n  console.log(props);\n  const {\n    text,\n    onClick\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\n\nconst Statistic = ({\n  text,\n  value\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [text, \" \", value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Statistic;\n\nconst Stats = ({\n  good,\n  neutral,\n  bad\n}) => {\n  const sum = good + neutral + bad;\n  const avg = (good - bad) / sum;\n  const pos_perc = (good / sum * 100).toString() + \" %\";\n\n  if (good === 0 && neutral === 0 && bad === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Statistics \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), \"No feedback given\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"good\",\n        value: good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"neutral\",\n        value: neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"bad\",\n        value: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"all\",\n        value: sum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"average\",\n        value: avg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"good\",\n        value: pos_perc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Stats;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"good\",\n      onClick: () => setGood(good + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"neutral\",\n      onClick: () => setNeutral(neutral + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"bad\",\n      onClick: () => setBad(bad + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 79,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistic\");\n$RefreshReg$(_c3, \"Stats\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/navaneeth/OneDrive - BIRLA INSTITUTE OF TECHNOLOGY and SCIENCE/Learning/Full Stack Open 2020/Submissions/part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","props","console","log","text","onClick","Statistic","value","Stats","good","neutral","bad","sum","avg","pos_perc","toString","App","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = (props) => { \n  console.log(props)\n  const { text, onClick } = props\n  return (\n    <button onClick={onClick}>\n      {text}\n    </button>\n  )\n}\n\nconst Statistic = ({text, value}) => {\n  return (\n    <div>\n      <tr> <td>\n      {text} {value} \n      </td> \n      </tr>\n    </div>\n  )\n}\n\nconst Stats = ({good, neutral, bad}) => {\n  const sum = good + neutral + bad\n  const avg = (good - bad)/sum\n  const pos_perc = (good/sum * 100).toString() + \" %\"\n\n  if(good===0 && neutral===0 && bad===0) {\n    return (\n      <div>\n        <h1> Statistics </h1>\n        No feedback given\n      </div>\n    )\n  }\n\n  return (\n    <div>\n    <h1> statistics</h1>\n    <table> \n    <Statistic text = \"good\" value={good} />\n    <Statistic text = \"neutral\" value={neutral} />\n    <Statistic text = \"bad\" value={bad} />\n    <Statistic text = \"all\" value={sum} />\n    <Statistic text = \"average\" value={avg} />\n    <Statistic text = \"good\" value={pos_perc} />\n    </table>\n    </div>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  \n\n  return (\n    <div>\n      <h1>give feedback</h1> \n\n      <Button text='good' onClick={() => setGood(good + 1)} />\n      <Button text='neutral' onClick={() => setNeutral(neutral + 1)} />\n      <Button text='bad' onClick={() => setBad(bad + 1)} />\n\n      <br />\n\n      <Stats good={good} neutral = {neutral} bad={bad} />\n\n      \n\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}